{"content":"This project is a 2D dodge game developed using OpenGL functions and computer graphics (CG) concepts. Players navigate a character to avoid obstacles that increase in difficulty over time. The game utilizes transformations, collision detection, and dynamic rendering to create an engaging player experience. Key CG concepts like scaling, translation, rotation, and real-time rendering are applied to bring fluid motion and responsiveness to the game. This project showcases the integration of OpenGL for graphics rendering and game mechanics, providing an interactive and visually appealing gameplay environment.","title":"Dodge Game","description":"A 2D dodge game developed using OpenGL, featuring real-time rendering and classic computer graphics concepts for an engaging player experience.","website":"https://example.com/","github":"https://github.com/vishwjit22154/Dodge-game","tags":[{"label":"C++"},{"label":"OpenGL"},{"label":"GLUT"},{"label":"Computer Graphics"},{"label":"Shaders"},{"label":"Physics in Game"}],"date":"2024-05-26","_meta":{"filePath":"fitness_tracker.mdx","fileName":"fitness_tracker.mdx","directory":".","extension":"mdx","path":"fitness_tracker"},"toc":[],"structuredData":{"contents":[{"heading":"","content":"This project is a 2D dodge game developed using OpenGL functions and computer graphics (CG) concepts. Players navigate a character to avoid obstacles that increase in difficulty over time. The game utilizes transformations, collision detection, and dynamic rendering to create an engaging player experience. Key CG concepts like scaling, translation, rotation, and real-time rendering are applied to bring fluid motion and responsiveness to the game. This project showcases the integration of OpenGL for graphics rendering and game mechanics, providing an interactive and visually appealing gameplay environment."}],"headings":[]},"body":"var Component=(()=>{var l=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var v=(e,n)=>()=>(n||e((n={exports:{}}).exports,n),n.exports),y=(e,n)=>{for(var t in n)i(e,t,{get:n[t],enumerable:!0})},c=(e,n,t,r)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let a of u(n))!f.call(e,a)&&a!==t&&i(e,a,{get:()=>n[a],enumerable:!(r=m(n,a))||r.enumerable});return e};var x=(e,n,t)=>(t=e!=null?l(h(e)):{},c(n||!e||!e.__esModule?i(t,\"default\",{value:e,enumerable:!0}):t,e)),j=e=>c(i({},\"__esModule\",{value:!0}),e);var d=v((G,s)=>{s.exports=_jsx_runtime});var _={};y(_,{default:()=>g});var o=x(d());function p(e){let n={p:\"p\",...e.components};return(0,o.jsx)(n.p,{children:\"This project is a 2D dodge game developed using OpenGL functions and computer graphics (CG) concepts. Players navigate a character to avoid obstacles that increase in difficulty over time. The game utilizes transformations, collision detection, and dynamic rendering to create an engaging player experience. Key CG concepts like scaling, translation, rotation, and real-time rendering are applied to bring fluid motion and responsiveness to the game. This project showcases the integration of OpenGL for graphics rendering and game mechanics, providing an interactive and visually appealing gameplay environment.\"})}function g(e={}){let{wrapper:n}=e.components||{};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}return j(_);})();\n;return Component;"}